from fastapi import FastAPI, WebSocket, WebSocketDisconnect
from fastapi.staticfiles import StaticFiles
from fastapi.responses import FileResponse
import asyncio
import os

app = FastAPI()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
FRONTEND_DIR = os.path.join(BASE_DIR, "frontend")

# –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏–∫–∏
app.mount("/static", StaticFiles(directory=FRONTEND_DIR), name="static")

@app.get("/")
async def read_index():
    return FileResponse(os.path.join(FRONTEND_DIR, "index.html"))

# WebSocket endpoint (—É–ø—Ä–æ—â—ë–Ω–Ω—ã–π –∏ —Ä–∞–±–æ—á–∏–π)
@app.websocket("/ws")
async def websocket_endpoint(websocket: WebSocket):
    await websocket.accept()
    try:
        while True:
            code = await websocket.receive_text()
            
            # –°–æ–∑–¥–∞—ë–º –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
            safe_globals = {
                'asyncio': asyncio,
                'print': lambda x: websocket.send_text(f"üëâ {x}"),
                'sleep': asyncio.sleep,
                'gather': asyncio.gather,
                'Queue': asyncio.Queue,
                'create_task': asyncio.create_task,
            }

            try:
                # –ó–∞–ø—Ä–µ—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –æ–ø–∞—Å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
                banned = ['__import__', 'eval(', 'exec(', 'open(']
                if any(word in code for word in banned):
                    raise ValueError("–ó–∞–ø—Ä–µ—â—ë–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è")

                # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–¥
                exec(code, safe_globals)
                await websocket.send_text("‚úÖ –£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ")
                
            except asyncio.CancelledError:
                await websocket.send_text("‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
            except Exception as e:
                await websocket.send_text(f"‚ùå –û—à–∏–±–∫–∞: {type(e).__name__}: {str(e)}")
                
    except WebSocketDisconnect:
        print("–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è")
    finally:
        await websocket.close()